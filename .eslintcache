[{"/Users/nirendra/Desktop/Desktop latest/24-hours-exam/student/src/index.js":"1","/Users/nirendra/Desktop/Desktop latest/24-hours-exam/student/src/reportWebVitals.js":"2","/Users/nirendra/Desktop/Desktop latest/24-hours-exam/student/src/App.js":"3","/Users/nirendra/Desktop/Desktop latest/24-hours-exam/student/src/component/edit-student.component.js":"4","/Users/nirendra/Desktop/Desktop latest/24-hours-exam/student/src/component/student.component.js":"5","/Users/nirendra/Desktop/Desktop latest/24-hours-exam/student/src/hooks/useEditStudent.js":"6"},{"size":500,"mtime":1608587293537,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1608587293539,"results":"9","hashOfConfig":"8"},{"size":464,"mtime":1608596779456,"results":"10","hashOfConfig":"8"},{"size":2466,"mtime":1608597801436,"results":"11","hashOfConfig":"8"},{"size":4445,"mtime":1609797954910,"results":"12","hashOfConfig":"8"},{"size":177,"mtime":1608597436651,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"juhan5",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/nirendra/Desktop/Desktop latest/24-hours-exam/student/src/index.js",[],["29","30"],"/Users/nirendra/Desktop/Desktop latest/24-hours-exam/student/src/reportWebVitals.js",[],"/Users/nirendra/Desktop/Desktop latest/24-hours-exam/student/src/App.js",[],"/Users/nirendra/Desktop/Desktop latest/24-hours-exam/student/src/component/edit-student.component.js",["31"],"import React, { Fragment } from \"react\";\nimport \"./student.css\";\n\nconst EditStudentDialog = (props) => {\n    const { openStudent, setOpenStudent } = props;\n\n\n    function close() {\n        setOpenStudent();\n    }\n    const handleChange = (event) => {\n        event.preventDefault();\n        const { value, name } = event.target;\n        setOpenStudent({ ...openStudent, [name]: value });\n    };\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        alert(\"success\");\n        setOpenStudent();\n        //API Need to be implemented\n    };\n\n    if (!openStudent) return null;\n\n    return (\n        <Fragment>\n            <div className=\"dialog-shadow\" />\n            <div className=\"dialog\">\n                <h1>Update Student</h1>\n                <div className=\"form-group\">\n                    <label className=\"form-label\" htmlFor=\"name\">\n                        Name:\n                    </label>\n                    <input\n                        className=\"form-input\"\n                        type=\"text\"\n                        name=\"name\"\n                        value={openStudent.name}\n                        onChange={handleChange}\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label className=\"form-label\" htmlFor=\"email\">\n                        Email:\n                    </label>\n                    <input\n                        className=\"form-input\"\n                        type=\"email\"\n                        name=\"email\"\n                        value={openStudent.email}\n                        onChange={handleChange}\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label className=\"form-label\" htmlFor=\"supervisor\">\n                        Supervisor:\n                    </label>\n                    <input\n                        className=\"form-input\"\n                        type=\"number\"\n                        name=\"supervisor\"\n                        value={openStudent.supervisor}\n                        onChange={handleChange}\n                        required\n                    />\n                </div>\n                <button className=\"submit-btn\" onClick={onSubmit}>\n                    Update student\n                </button>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default EditStudentDialog;","/Users/nirendra/Desktop/Desktop latest/24-hours-exam/student/src/component/student.component.js",[],"/Users/nirendra/Desktop/Desktop latest/24-hours-exam/student/src/hooks/useEditStudent.js",[],["32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":8,"column":14,"nodeType":"40","messageId":"41","endLine":8,"endColumn":19},{"ruleId":"34","replacedBy":"42"},{"ruleId":"36","replacedBy":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'close' is defined but never used.","Identifier","unusedVar",["44"],["45"],"no-global-assign","no-unsafe-negation"]